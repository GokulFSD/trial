{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/page/page.component.html","webpack:///./src/app/page/page.component.sass","webpack:///./src/app/page/page.component.ts","webpack:///./src/app/resp/resp.component.css","webpack:///./src/app/resp/resp.component.html","webpack:///./src/app/resp/resp.component.ts","webpack:///./src/app/sawtooth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///util (ignored)","webpack:///util (ignored)?a83b","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h3>PROJECT\\n  HYGIEIA:\\n</h3>\\n<p>This project involves the use of permissioned blockchain Sawtooth under the hyperledger umbrella on the use case relating to healthcare in particular to that of Organ Donation. Health is the most important part of a person’s life and a such this project aims to introduce a permissioned blockchain into particular aspects of Organ Donation, in respect to an Organ donor list which is privacy protected and tamper proof in order to curb any exploitation and preserve privacy of members of Donor list,  also it helps in ordering a Recipient list wherein members are classified in a first come first serve basis and priority is set with voting of particular member nodes with the particular criteria set for voting and with a threshold set by the admin. The main aim is to match recipient and donors by traversing transactions.\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageComponent } from './page/page.component';\nimport { RespComponent } from './resp/resp.component';\n\nconst routes: Routes = [\n  { path: '', component: PageComponent},\n  { path: 'resp', component: RespComponent}\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<app-nav></app-nav>\\n<router-outlet>\\n</router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hygeia';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PageComponent } from './page/page.component';\nimport { RespComponent } from './resp/resp.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AboutComponent } from './about/about.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageComponent,\n    RespComponent,\n    NavComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"body {  padding: 5px; font-family: helvetica; font:15px;  }\\n.p1 { text-align: center; }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFFBQVEsYUFBYSxDQUFDLHVCQUF1QixDQUFDLFVBQVUsR0FBRztBQUMzRCxNQUFNLG1CQUFtQixFQUFFIiwiZmlsZSI6InNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7ICBwYWRkaW5nOiA1cHg7IGZvbnQtZmFtaWx5OiBoZWx2ZXRpY2E7IGZvbnQ6MTVweDsgIH1cbi5wMSB7IHRleHQtYWxpZ246IGNlbnRlcjsgfSJdfQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark \\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink =\\\"\\\">  <legend>\\n  {{title}}\\n    </legend></a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"\\\">Home</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink =\\\"about\\\">About</a>\\n\\n           </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink =\\\"login\\\">Login</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink =\\\"sign\\\">Sign Up</a>\\n\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink =\\\"resp\\\">Recepient List</a>\\n\\n          </li>\\n      </ul>\\n      <br/>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!-- <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\\\"></script>\\n<script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\"></script>\\n<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\"> -->\\n<br/>\\n<br/><legend><p class=\\\"p1\\\">Enter Details of Donor</p></legend><br/>\\n<div class=\\\"container\\\">\\n\\n  <form  class=\\\"form\\\" >\\n    <div class=\\\"form-group\\\">\\n\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"name\\\">Name:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input #Name type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"name\\\" name='Name' ngModel required pattern=\\\"^[a-zA-Z\\\\.]*$\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"Date\\\">Date of Birth:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input #date type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"date\\\" placeholder=\\\"Date\\\" name='date' ngModel required>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"Gender\\\">Gender:</label>\\n      <div class=\\\"col-sm-10\\\">\\n              <select class=\\\"form-control\\\" id=\\\"Gender\\\" #Gender type=\\\"text\\\" name='Gender' ngModel required>\\n                <option>Male</option>\\n                <option>Female</option>\\n                <option>Other</option>\\n              </select>\\n              <br>\\n        </div>\\n      </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"btype\\\">Blood Type:</label>\\n      <div class=\\\"col-sm-10\\\">\\n              <select class=\\\"form-control\\\" id=\\\"btype\\\" #btype type=\\\"text\\\" name='btype' ngModel required>\\n                <option>A+</option>\\n                <option>A-</option>\\n                <option>B-</option>\\n                <option>B+</option>\\n                <option>AB+</option>\\n                <option>AB-</option>\\n                <option>O-</option>\\n                <option>O+</option>\\n              </select>\\n              <br>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-5\\\" id=\\\"otype\\\">Organ to be recieved</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <select class=\\\"form-control\\\" id=\\\"otype\\\" #otype type=\\\"text\\\" name='otype' ngModel required>\\n              <option>Lung</option>\\n              <option>Kidney</option>\\n              <option>Liver</option>\\n              <option>Eye(corneas)</option>\\n              <option>Larynx</option>\\n              <option>Pancreas</option>\\n              <option>Intestine</option>\\n            </select>\\n        </div>\\n      </div>\\n\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"idproof\\\">Enter Identity No:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input #idproof type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"idproof\\\" placeholder=\\\"enter government given identity proof (aadhar preferred)\\\" name=\\\"pwd\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"cno\\\">Enter Contact No:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"tel\\\" class=\\\"form-control\\\" id=\\\"cno\\\" placeholder=\\\"Contact Number\\\" name=\\\"tel\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"cid\\\">Contact Info:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"textarea\\\" class=\\\"form-control\\\" id=\\\"cid\\\" placeholder=\\\"enter Contact information\\\" name=\\\"cid\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <div class=\\\"checkbox\\\">\\n          <label><input type=\\\"checkbox\\\" name=\\\"Save\\\"> Save</label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"addForm(btype.value,otype.value,Gender.value,idproof.value,date.value,Name.value,NHS)\\\">Submit</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\\n<p>{{clickMessage}}</p>\\n<p> {{servicedata}}</p>\\n\\n\"","module.exports = \"body {\\n  padding: 5px;\\n  font-family: helvetica;\\n  font: 15px; }\\n\\n.p1 {\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2dva3VsL0RvY3VtZW50cy9jaGR0cmlhbC9oeWdpZWlhdHJpYWwvaHlnZWlhL3NyYy9hcHAvcGFnZS9wYWdlLmNvbXBvbmVudC5zYXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQVEsYUFBWTtFQUFFLHVCQUFzQjtFQUFFLFdBQVMsRUFBTTs7QUFDN0Q7RUFBTSxtQkFBa0IsRUFBSSIsImZpbGUiOiJzcmMvYXBwL3BhZ2UvcGFnZS5jb21wb25lbnQuc2FzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkgeyAgcGFkZGluZzogNXB4OyBmb250LWZhbWlseTogaGVsdmV0aWNhOyBmb250OjE1cHg7ICAgfTtcbi5wMSB7IHRleHQtYWxpZ246IGNlbnRlcjsgfTtcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SawtoothService } from '../sawtooth.service';\n\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.sass']\n})\nexport class PageComponent implements OnInit {\n  \n  users=[];\n  clickMessage=\"\";\n  servicedata=\"\";\n  \n\n  constructor(private Form:SawtoothService) { \n    console.log(\"Inside page component.ts\")\n  }\n  ngOnInit() {\n  }\n  async addForm(btype:string,otype:string,Gender:string,idproof:string,date:string,Name:string){\n   // event.preventDefault();\n \n   this.clickMessage=\"Blood type:\"+btype+\"Organ type:\" +otype +\" Gender: \"+Gender + \" Registration Date:\"+date + \" Name:\" +Name ;\n    const proc =\"NHS\"\n    const servDt =await this.Form.sendData(btype,otype,Gender,idproof,date,Name,proc);\n    \n    this.servicedata=\"htis is service dAatta\"+servDt;\n    //+servDt.toString();\n    \n  }\n}\n","module.exports = \"body {  padding: 5px; font-family: helvetica; font:15px;   }\\n.p1 { text-align: center; }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzcC9yZXNwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxhQUFhLENBQUMsdUJBQXVCLENBQUMsVUFBVSxJQUFJO0FBQzVELE1BQU0sbUJBQW1CLEVBQUUiLCJmaWxlIjoic3JjL2FwcC9yZXNwL3Jlc3AuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkgeyAgcGFkZGluZzogNXB4OyBmb250LWZhbWlseTogaGVsdmV0aWNhOyBmb250OjE1cHg7ICAgfVxuLnAxIHsgdGV4dC1hbGlnbjogY2VudGVyOyB9Il19 */\"","module.exports = \"<!-- <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\\\"></script>\\n<script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\"></script>\\n<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\"> -->\\n<br/>\\n<br/><legend><p class=\\\"p1\\\">Enter Details of Recipient</p></legend><br/>\\n<div class=\\\"container\\\">\\n\\n  <form  class=\\\"form\\\" >\\n    <div class=\\\"form-group\\\">\\n\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"name\\\">Name:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input #Name type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"name\\\" name='Name' ngModel required pattern=\\\"^[a-zA-Z\\\\.]*$\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"Date\\\">Date of Birth:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input #date type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"date\\\" placeholder=\\\"Date\\\" name='date' ngModel required>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"Gender\\\">Gender:</label>\\n      <div class=\\\"col-sm-10\\\">\\n              <select class=\\\"form-control\\\" id=\\\"Gender\\\" #Gender type=\\\"text\\\" name='Gender' ngModel required>\\n                <option>Male</option>\\n                <option>Female</option>\\n                <option>Other</option>\\n              </select>\\n              <br>\\n        </div>\\n      </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"btype\\\">Blood Type:</label>\\n      <div class=\\\"col-sm-10\\\">\\n              <select class=\\\"form-control\\\" id=\\\"btype\\\" #btype type=\\\"text\\\" name='btype' ngModel required>\\n                <option>A+</option>\\n                <option>A-</option>\\n                <option>B-</option>\\n                <option>B+</option>\\n                <option>AB+</option>\\n                <option>AB-</option>\\n                <option>O-</option>\\n                <option>O+</option>\\n              </select>\\n              <br>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-5\\\" id=\\\"otype\\\">Organ to be recieved</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <select class=\\\"form-control\\\" id=\\\"otype\\\" #otype type=\\\"text\\\" name='otype' ngModel required>\\n              <option>Lung</option>\\n              <option>Kidney</option>\\n              <option>Liver</option>\\n              <option>Eye(corneas)</option>\\n              <option>Larynx</option>\\n              <option>Pancreas</option>\\n              <option>Intestine</option>\\n            </select>\\n        </div>\\n      </div>\\n\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"idproof\\\">Enter Identity No:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input #idproof type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"idproof\\\" placeholder=\\\"enter government given identity proof (aadhar preferred)\\\" name=\\\"pwd\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"cno\\\">Enter Contact No:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"tel\\\" class=\\\"form-control\\\" id=\\\"cno\\\" placeholder=\\\"Contact Number\\\" name=\\\"tel\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"cid\\\">Contact Info:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"textarea\\\" class=\\\"form-control\\\" id=\\\"cid\\\" placeholder=\\\"enter Contact information\\\" name=\\\"cid\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <div class=\\\"checkbox\\\">\\n          <label><input type=\\\"checkbox\\\" name=\\\"Save\\\"> Save</label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"addForm(btype.value,otype.value,Gender.value,idproof.value,date.value,Name.value)\\\">Submit</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\\n<p>{{clickMessage}}</p>\\n<p> {{servicedata}}</p>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SawtoothService } from '../sawtooth.service';\n\n@Component({\n  selector: 'app-resp',\n  templateUrl: './resp.component.html',\n  styleUrls: ['./resp.component.css']\n})\nexport class RespComponent implements OnInit {\n\n  users=[];\n  clickMessage=\"\";\n  servicedata=\"\";\n\n  constructor(private Form:SawtoothService) { \n    console.log(\"Inside page component.ts\")\n  }\n  ngOnInit() {\n  }\n  async addForm(btype:string,otype:string,Gender:string,idproof:string,date:string,Name:string){\n   // event.preventDefault();\n   \n   this.clickMessage=\"Blood type:\"+btype+\"Organ type:\" +otype +\" Gender: \"+Gender + \" Registration Date:\"+date + \" Name:\" +Name;\n   const reproc =\"resp\"\n    const servDt =await this.Form.sendData(btype,otype,Gender,idproof,date,Name,reproc);\n    \n    this.servicedata=\"htis is service dAatta\"+servDt;\n    //+servDt.toString();\n    \n  }\n}","import { Injectable } from '@angular/core';\n\n\nimport { createHash } from 'crypto-browserify';\nimport * as protobuf  from \"sawtooth-sdk/protobuf\";\nimport { CryptoFactory, createContext } from \"sawtooth-sdk/signing\";\nimport * as Secp256k1PrivateKey from 'sawtooth-sdk/signing/secp256k1';\n\nimport { HttpClient } from '@angular/common/http';\n\nimport {Buffer} from 'buffer/';\n\nimport { TextEncoder, TextDecoder} from \"text-encoding/lib/encoding\";\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SawtoothService {\n\n  private Family_name='hygieia';\n  private Family_version='1.0';\n  private REST_API_BASE_URL='http://localhost:4200/api';\n\n  public address:any;\n  public publicKey:any;\n  public signer:any;\n\n  \n    \n  constructor() {}\n\n\n  private hash(v) {\n    return createHash('sha512').update(v).digest('hex');\n  }\n\n  private genAddress(pblckey){\n    this.address =  this.hash(\"hygieia\").substr(0, 6) + this.hash(pblckey).substr(0, 64);\n    return this.address;\n  }\n  /*-------------Creating transactions & batches--------------------*/\n/*\n  private getTransactionsList(payload): any {\n    // Create transaction header\n    const transactionHeader = this.getTransactionHeaderBytes([this.address], [this.address], payload);\n    // Create transaction\n    const transaction = this.getTransaction(transactionHeader, payload);\n    // Transaction list\n    const transactionsList = [transaction];\n\n    return transactionsList\n  }\n*/\n\nprivate getTransactionHeaderBytes(inputAddressList, outputAddressList, payload): any {\n  const transactionHeaderBytes = protobuf.TransactionHeader.encode({\n    familyName: this.Family_name,\n    familyVersion: this.Family_version,\n    inputs: inputAddressList,\n    outputs: outputAddressList,\n    signerPublicKey: this.publicKey,\n    batcherPublicKey: this.publicKey,\n    dependencies: [],\n    payloadSha512: this.hash(payload),\n    nonce: (Math.random() * 1000).toString()\n  }).finish();\n\n  return transactionHeaderBytes;\n}\n\nprivate getTransaction(transactionHeaderBytes, payloadBytes): any {\n    const transaction = protobuf.Transaction.create({\n    header: transactionHeaderBytes,\n    headerSignature: this.signer.sign(transactionHeaderBytes),\n    payload: payloadBytes\n  });\n\n  return transaction;\n}\nprivate getBatchHeaderBytes(transactionSignaturesList): any {\n  console.log(\"Inside get BAtch list\");\n  const batchHeader = protobuf.BatchHeader.encode({\n    signerPublicKey: this.publicKey,\n    transactionIds: transactionSignaturesList\n  }).finish();\n\n  return batchHeader;\n}\n\nprivate getBatch(batchHeaderBytes, transactionsList): any {\n  const batch = protobuf.Batch.create({\n    header: batchHeaderBytes,\n    headerSignature: this.signer.sign(batchHeaderBytes),\n    transactions: transactionsList\n  });\n\n  return batch;\n}\n\nprivate getBatchListBytes(batchesList): any {\n  const batchListBytes = protobuf.BatchList.encode({\n    batches: batchesList\n  }).finish();\n\n  return batchListBytes;\n}\n\nprivate getBatchList(transactionsList) {\n  // Complete here\n  //const transactions = transactionsList;\n  // List of transaction signatures\n  const transactionSignatureList = transactionsList.map((tx) => tx.headerSignature);\n\n  // Create batch header\n  const batchHeader = this.getBatchHeaderBytes(transactionSignatureList);\n  // Create the batch\n  const batch = this.getBatch(batchHeader, transactionsList);\n  // Batch List\n  const batchList = this.getBatchListBytes([batch]);   \n\n      return batchList\n}\n\n/*-------END Creating transactions & batches-----------*/\n\n// Get state of address from rest api\nprivate async getState(address): Promise<any> {\n  const getStateURL = this.REST_API_BASE_URL + '/state/' + address;\n  const fetchOptions = { method: 'GET' };\n  return window.fetch(getStateURL, fetchOptions);\n}\n\nprivate getDecodedData(responseJSON): string {\n  const dataBytes = responseJSON.data;\n  const decodedData = new Buffer(dataBytes, 'base64').toString();\n  return decodedData;\n}\n\n// Count button will call this function directly\n// For Count button calls, 'batchListBytes' will be null\n  public async sendToRestAPI(batchListBytes) :Promise<any>{\n    if (batchListBytes == null) {\n\n      // GET state\n      return this.getState(this.address)\n        .then((response) => {\n          console.log(\"batchlist null\");\n          return response.json();\n        })\n        .then((responseJson) => {\n          console.log(\"batchlist null2\");\n          return this.getDecodedData(responseJson)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n    else {\n\n      // POST batch list\n      console.log(\"calling postBatchList\");\n      return this.postBatchList(batchListBytes)\n    }\n  }\n  \n  // Post batch list to rest api\n  private postBatchList(batchListBytes): Promise<any> {\n    const postBatchListURL = this.REST_API_BASE_URL + '/batches';\n    const fetchOptions = {\n      method: 'POST',\n      body: batchListBytes,\n      headers: {\n        'Content-Type': 'application/octet-stream'\n      }\n    }\n    return window.fetch(postBatchListURL, fetchOptions);\n  }\n\n\n\n\n  public async sendData(btype,otype,gender,idproof,date,name,proc) {\n    \n    try{\n\n    const context = createContext('secp256k1');\n    // Creating a random private key - In LIVE, we will be using our own private keys\n    const privateKey = context.newRandomPrivateKey();\n    this.signer = new CryptoFactory(context).newSigner(privateKey);\n    this.publicKey=this.signer.getPublicKey().asHex();\n    console.log(\"Inside constructor\") \n    // Encode the payload\n    /*const payload = this.getEncodedData(action, values);*/\n    const data = btype + \",\" + otype+\",\"+ gender+ \",\" + idproof+ \",\"+ date +\",\"+ name +\",\" +proc;\n    console.log(data+\"data\");\n    //return data;\n    const encData=new TextEncoder('utf8').encode(data);\n    console.log(encData+\"encDAta\");\n    console.log(\"Public\"+this.publicKey+\"Private \")\n   // this.address=this.genAddress(this.publicKey)\n   this.address =  this.hash(\"hygieia\").substr(0, 6) + this.hash(this.publicKey).substr(0, 64);\n    console.log(\"ThisAddress\"+this.address)\n     // Create transaction header\n    const transactionHeader = this.getTransactionHeaderBytes([this.address], [this.address], encData);\n    console.log(\"After txn header\")\n    // Create transaction\n    const transaction = this.getTransaction(transactionHeader, encData);\n    console.log(\"After transaction\")\n    // Transaction list\n    const transactionsList = [transaction];\n    console.log(\"After transactionsList\")\n   // Create a list of batches. In our case, one batch only in the list\n   const batchList = this.getBatchList(transactionsList);\n   console.log(\"After batchList\")\n\n   // Send the batch to REST API\n    await this.sendToRestAPI(batchList)\n   .then((resp) => {\n     console.log(\"sendToRestAPI response\", resp);\n   })\n   .catch((error) => {\n     console.log(\"error here\", error);\n   })\n    return batchList;\n  }\n    catch (e) {\n      console.log(\"Error in reading the key details\", e);\n      return \"ERROR\";\n  }\n  \n  \n/*\n    \n    const transactionsList = this.getTransactionsList(payload);\n    const batchList = this.getBatchList(transactionsList);\n\n    // Send the batch to REST API\n    await this.sendToRestAPI(batchList)\n      .then((resp) => {\n        console.log(\"response here\", resp);\n      })\n      .catch((error) => {\n        console.log(\"error here\", error);\n      })*/\n  }\n}\n  \n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}